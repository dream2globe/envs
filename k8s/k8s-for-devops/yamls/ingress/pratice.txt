kubectl delete all --all

# http-go 디플로이먼트/서비스 생성
kubectl create deploy http-go --image=gasbugs/http-go 
kubectl expose deploy http-go --port=80 --target-port=8080

# 톰캣 디플로이먼트/서비스 생성
kubectl create deploy tomcat --image=consol/tomcat-7.0 
kubectl expose deploy tomcat --port=80 --target-port=8080

# TLS 인증서 생성
openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -out gasbugs-tls.crt \
    -keyout gasbugs-tls.key \
    -subj "/CN=ingress-tls"

# tls 인증서를 통해 secret을 구성
kubectl create secret tls gasbugs-tls \
    --namespace default \
    --key gasbugs-tls.key \
    --cert gasbugs-tls.crt

cat <<EOF | kubectl apply -f -
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: http-go-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - tomcat.gasbugs.com    
    - http-go.gasbugs.com
    secretName: gasbugs-tls
  rules:
    - host: http-go.gasbugs.com
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: http-go
                port: 
                  number: 80
    - host: tomcat.gasbugs.com
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: tomcat
                port: 
                  number: 80
EOF

# 확인 명령어
curl http://tomcat.gasbugs.com:32049/welcome/test -kv --resolve tomcat.gasbugs.com:32049:127.0.0.1
curl https://tomcat.gasbugs.com:31915/ -kv --resolve tomcat.gasbugs.com:31915:127.0.0.1
curl https://http-go.gasbugs.com:31915/ -kv --resolve http-go.gasbugs.com:31915:127.0.0.1